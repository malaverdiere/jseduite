<?xml version="1.0" encoding="UTF-8"?>
<process
    name="WeatherProxy"
    targetNamespace="http://modalis.i3s.unice.fr/jSeduite/bpel/WeatherProxy"
    xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema"
    xmlns:sxt="http://www.sun.com/wsbpel/2.0/process/executable/SUNExtension/Trace" 
    xmlns:sxed="http://www.sun.com/wsbpel/2.0/process/executable/SUNExtension/Editor"
    xmlns:tns="http://modalis.i3s.unice.fr/jSeduite/bpel/WeatherProxy" xmlns:ns0="http://modalis.i3s.unice.fr/jSeduite/schema/WeatherProxy" xmlns:ns1="http://api.wxbug.net/" xmlns:sxxf="http://www.sun.com/wsbpel/2.0/process/executable/SUNExtension/XPathFunctions">
    <import namespace="http://modalis.i3s.unice.fr/jSeduite/wsdl/WeatherProxy" location="WeatherProxy.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
    <import namespace="http://enterprise.netbeans.org/bpel/weatherservice.asmxWrapper" location="Partners/api.wxbug.net/weatherservice.asmxWrapper.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
    <import namespace="http://api.wxbug.net/" location="Partners/api.wxbug.net/weatherservice.asmx.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
    <import namespace="http://modalis.i3s.unice.fr/jSeduite/schema/WeatherProxy" location="WeatherProxy.xsd" importType="http://www.w3.org/2001/XMLSchema"/>
    <partnerLinks>
        <partnerLink name="weatherbug" xmlns:tns="http://enterprise.netbeans.org/bpel/weatherservice.asmxWrapper" partnerLinkType="tns:WeatherBugWebServicesSoapLinkType" partnerRole="weatherbug"/>
        <partnerLink name="external" xmlns:tns="http://modalis.i3s.unice.fr/jSeduite/wsdl/WeatherProxy" partnerLinkType="tns:WeatherProxy" myRole="WeatherProxyPortTypeRole"/>
    </partnerLinks>
    <variables>
        <variable name="size" type="xsd:int"/>
        <variable name="cpt" type="xsd:int"/>
        <variable name="aWeatherBugForecast" type="ns1:ApiForecastData"/>
        <variable name="GetForecastByCityCodeOut" messageType="ns1:GetForecastByCityCodeSoapOut"/>
        <variable name="GetForecastByCityCodeIn" messageType="ns1:GetForecastByCityCodeSoapIn"/>
        <variable name="liveWeather" type="ns1:LiveWeatherData"/>
        <variable name="GetLiveWeatherByCityCodeOut" xmlns:tns="http://api.wxbug.net/" messageType="tns:GetLiveWeatherByCityCodeSoapOut"/>
        <variable name="GetLiveWeatherByCityCodeIn" xmlns:tns="http://api.wxbug.net/" messageType="tns:GetLiveWeatherByCityCodeSoapIn"/>
        <variable name="cityCode" type="xsd:string"/>
        <variable name="WeatherProxyOperationOut" xmlns:tns="http://modalis.i3s.unice.fr/jSeduite/wsdl/WeatherProxy" messageType="tns:WeatherProxyOperationResponse"/>
        <variable name="WeatherProxyOperationIn" xmlns:tns="http://modalis.i3s.unice.fr/jSeduite/wsdl/WeatherProxy" messageType="tns:WeatherProxyOperationRequest"/>
    </variables>
    <sequence>
        <sequence name="a1">
            <receive name="a1_tech" createInstance="yes" partnerLink="external" operation="WeatherProxyOperation" xmlns:tns="http://modalis.i3s.unice.fr/jSeduite/wsdl/WeatherProxy" portType="tns:WeatherProxyPortType" variable="WeatherProxyOperationIn"/>
            <assign name="a1_post">
                <copy>
                    <from>$WeatherProxyOperationIn.in/ns0:CityCode</from>
                    <to variable="cityCode"/>
                </copy>
            </assign>
        </sequence>
        <flow name="doInParallel">
            <sequence name="a02">
                <assign name="a02_pre">
                        <copy>
                                <from variable="cityCode"/>
                                    <to>$GetLiveWeatherByCityCodeIn.parameters/ns1:cityCode</to>
                            </copy>
                            <copy>
                                <from>'Metric'</from>
                                    <to>$GetLiveWeatherByCityCodeIn.parameters/ns1:unittype</to>
                            </copy>
                            <copy>
                                <from>'A4653547557'</from>
                                    <to>$GetLiveWeatherByCityCodeIn.parameters/ns1:ACode</to>
                            </copy>
                    </assign>
                    <invoke name="a02_tech" partnerLink="weatherbug" operation="GetLiveWeatherByCityCode" portType="ns1:WeatherBugWebServicesSoap" inputVariable="GetLiveWeatherByCityCodeIn" outputVariable="GetLiveWeatherByCityCodeOut"/>
                    <assign name="a02_post">
                        <copy>
                                <from>$GetLiveWeatherByCityCodeOut.parameters/ns1:GetLiveWeatherByCityCodeResult</from>
                                    <to variable="liveWeather"/>
                            </copy>
                    </assign>
            </sequence>
            <sequence name="a12">
                <assign name="a12_pre">
                    <copy>
                        <from variable="cityCode"/>
                        <to>$GetForecastByCityCodeIn.parameters/ns1:cityCode</to>
                    </copy>
                    <copy>
                        <from>'Metric'</from>
                        <to>$GetForecastByCityCodeIn.parameters/ns1:unitType</to>
                    </copy>
                    <copy>
                        <from>'A4653547557'</from>
                        <to>$GetForecastByCityCodeIn.parameters/ns1:ACode</to>
                    </copy>
                </assign>
                    <invoke name="a12_tech" partnerLink="weatherbug" operation="GetForecastByCityCode" portType="ns1:WeatherBugWebServicesSoap" inputVariable="GetForecastByCityCodeIn" outputVariable="GetForecastByCityCodeOut"/>
            </sequence>
        </flow>
        <assign name="a3">
            <copy>
                <from>$liveWeather/ns1:StationName</from>
                <to>$WeatherProxyOperationOut.out/ns0:return/ns0:live/ns0:station</to>
            </copy>
            <copy>
                <from>number($liveWeather/ns1:Pressure)</from>
                <to>$WeatherProxyOperationOut.out/ns0:return/ns0:live/ns0:pressure</to>
            </copy>
            <copy>
                <from>number($liveWeather/ns1:RainToday)</from>
                <to>$WeatherProxyOperationOut.out/ns0:return/ns0:live/ns0:rain</to>
            </copy>
            <copy>
                <from>number($liveWeather/ns1:WindSpeed)</from>
                <to>$WeatherProxyOperationOut.out/ns0:return/ns0:live/ns0:windSpeed</to>
            </copy>
            <copy>
                <from>$liveWeather/ns1:WindDirection</from>
                <to>$WeatherProxyOperationOut.out/ns0:return/ns0:live/ns0:windDirection</to>
            </copy>
            <copy>
                <from>$liveWeather/ns1:CurrIcon</from>
                <to>$WeatherProxyOperationOut.out/ns0:return/ns0:live/ns0:icon</to>
            </copy>
            <copy>
                <from>number($liveWeather/ns1:TemperatureLow)</from>
                <to>$WeatherProxyOperationOut.out/ns0:return/ns0:live/ns0:minTemp</to>
            </copy>
            <copy>
                <from>number($liveWeather/ns1:TemperatureHigh)</from>
                <to>$WeatherProxyOperationOut.out/ns0:return/ns0:live/ns0:maxTemp</to>
            </copy>
            <copy>
                <from>number($liveWeather/ns1:Temperature)</from>
                <to>$WeatherProxyOperationOut.out/ns0:return/ns0:live/ns0:temp</to>
            </copy>
        </assign>
        <sequence name="a4">
            <scope name="a4_scope">
                <sequence name="a4_scope_sequence">
                    <assign name="a4_loop_pre">
                        <copy>
                            <from>1</from>
                                <to variable="cpt"/>
                        </copy>
                            <copy>
                            <from>count($GetForecastByCityCodeOut.parameters/ns1:GetForecastByCityCodeResult/ns1:anyType)</from>
                                <to variable="size"/>
                        </copy>
                    </assign>
                    <while name="a4_loop">
                        <condition>$cpt &lt;= $size</condition>
                            <sequence name="a4_internal">
                                <assign name="a4_pre">
                                        <copy>
                                                <from>$GetForecastByCityCodeOut.parameters/ns1:GetForecastByCityCodeResult/ns1:anyType[$cpt]</from>
                                                    <to variable="aWeatherBugForecast"/>
                                            </copy>
                                    </assign>
                                    <assign name="a4_tech">
                                        <copy>
                                            <from>number($aWeatherBugForecast/ns1:TempLow)</from>
                                            <to>$WeatherProxyOperationOut.out/ns0:return/ns0:forecast[$cpt]/ns0:minTemp</to>
                                        </copy>
                                        <copy>
                                            <from>number($aWeatherBugForecast/ns1:TempHigh)</from>
                                            <to>$WeatherProxyOperationOut.out/ns0:return/ns0:forecast[$cpt]/ns0:maxTemp</to>
                                        </copy>
                                        <copy>
                                            <from>concat('cond', substring-after($aWeatherBugForecast/ns1:Image, 'cond'))</from>
                                            <to>$WeatherProxyOperationOut.out/ns0:return/ns0:forecast[$cpt]/ns0:icon</to>
                                        </copy>
                                        <copy>
                                            <from>$aWeatherBugForecast/ns1:ShortTitle</from>
                                            <to>$WeatherProxyOperationOut.out/ns0:return/ns0:forecast[$cpt]/@day</to>
                                        </copy>
                                    </assign>
                                    <assign name="a4_post">
                                        <copy>
                                                <from>$cpt + 1</from>
                                                    <to variable="cpt"/>
                                            </copy>
                                    </assign>
                            </sequence>
                    </while>
                </sequence>
            </scope>
        </sequence>
        <sequence name="a5">
            <reply name="a5_tech" partnerLink="external" operation="WeatherProxyOperation" xmlns:tns="http://modalis.i3s.unice.fr/jSeduite/wsdl/WeatherProxy" portType="tns:WeatherProxyPortType" variable="WeatherProxyOperationOut"/>
        </sequence>
    </sequence>
</process>
