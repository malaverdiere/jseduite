<?xml version="1.0" encoding="UTF-8"?>
<process
    name="WeatherProxy"
    targetNamespace="http://modalis.i3s.unice.fr/jSeduite/orchestrations/bpel/WeatherProxy"
    xmlns="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema"
    xmlns:sxt="http://www.sun.com/wsbpel/2.0/process/executable/SUNExtension/Trace" 
    xmlns:sxed="http://www.sun.com/wsbpel/2.0/process/executable/SUNExtension/Editor"
    xmlns:tns="http://modalis.i3s.unice.fr/jSeduite/orchestrations/bpel/WeatherProxy" xmlns:ns0="http://modalis.i3s.unice.fr/jSeduite/orchestrations/schema/WeatherProxy" xmlns:ns1="http://api.wxbug.net/">
    <import namespace="http://modalis.i3s.unice.fr/jSeduite/orchestrations/wsdl/WeatherProxy" location="WeatherProxy.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
    <import namespace="http://enterprise.netbeans.org/bpel/weatherservice.asmxWrapper" location="Partners/weatherservice.asmxWrapper.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
    <import namespace="http://api.wxbug.net/" location="Partners/weatherservice.asmx.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
    <import namespace="http://enterprise.netbeans.org/bpel/PartnerKeysServiceWrapper" location="Partners/PartnerKeysServiceWrapper.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
    <import namespace="http://partners.registry.technical.jSeduite.modalis.i3s.unice.fr/" location="Partners/PartnerKeysService.wsdl" importType="http://schemas.xmlsoap.org/wsdl/"/>
    <import namespace="http://modalis.i3s.unice.fr/jSeduite/orchestrations/schema/WeatherProxy" location="WeatherProxy.xsd" importType="http://www.w3.org/2001/XMLSchema"/>
    <partnerLinks>
        <partnerLink name="partnerKeys" xmlns:tns="http://enterprise.netbeans.org/bpel/PartnerKeysServiceWrapper" partnerLinkType="tns:PartnerKeysLinkType" partnerRole="PartnerKeysRole"/>
        <partnerLink name="weatherBugService" xmlns:tns="http://enterprise.netbeans.org/bpel/weatherservice.asmxWrapper" partnerLinkType="tns:WeatherBugWebServicesSoapLinkType" partnerRole="WeatherBugWebServicesSoapRole"/>
        <partnerLink name="external" xmlns:tns="http://modalis.i3s.unice.fr/jSeduite/orchestrations/wsdl/WeatherProxy" partnerLinkType="tns:WeatherProxy" myRole="WeatherProxyPortTypeRole"/>
    </partnerLinks>
    <variables>
        <variable name="simpl_forecastInfo_star" type="ns0:SetOfForecastWeather"/>
        <variable name="simpl_liveInfo" type="ns0:LiveWeather"/>
        <variable name="forecastInfo_star" type="ns1:ArrayOfApiForecastData"/>
        <variable name="liveInfo" type="ns1:LiveWeatherData"/>
        <variable name="unit" type="xsd:string"/>
        <variable name="GetForecastByCityCodeOut" xmlns:tns="http://api.wxbug.net/" messageType="tns:GetForecastByCityCodeSoapOut"/>
        <variable name="GetForecastByCityCodeIn" xmlns:tns="http://api.wxbug.net/" messageType="tns:GetForecastByCityCodeSoapIn"/>
        <variable name="GetLiveWeatherByCityCodeOut" xmlns:tns="http://api.wxbug.net/" messageType="tns:GetLiveWeatherByCityCodeSoapOut"/>
        <variable name="GetLiveWeatherByCityCodeIn" xmlns:tns="http://api.wxbug.net/" messageType="tns:GetLiveWeatherByCityCodeSoapIn"/>
        <variable name="key" type="xsd:string"/>
        <variable name="GetOut" xmlns:tns="http://partners.registry.technical.jSeduite.modalis.i3s.unice.fr/" messageType="tns:getResponse"/>
        <variable name="GetIn" xmlns:tns="http://partners.registry.technical.jSeduite.modalis.i3s.unice.fr/" messageType="tns:get"/>
        <variable name="keyName" type="xsd:string"/>
        <variable name="result" type="ns0:WeatherInformation"/>
        <variable name="GetWeatherOut" xmlns:tns="http://modalis.i3s.unice.fr/jSeduite/orchestrations/wsdl/WeatherProxy" messageType="tns:GetWeatherResponse"/>
        <variable name="cityCode" type="xsd:string"/>
        <variable name="GetWeatherIn" xmlns:tns="http://modalis.i3s.unice.fr/jSeduite/orchestrations/wsdl/WeatherProxy" messageType="tns:GetWeatherRequest"/>
    </variables>
    <sequence>
        <sequence name="a1">
            <receive name="a1_tech" createInstance="yes" partnerLink="external" operation="GetWeather" xmlns:tns="http://modalis.i3s.unice.fr/jSeduite/orchestrations/wsdl/WeatherProxy" portType="tns:WeatherProxyPortType" variable="GetWeatherIn"/>
            <assign name="a1_post">
                <copy>
                    <from>$GetWeatherIn.in/ns0:CityCode</from>
                    <to variable="cityCode"/>
                </copy>
            </assign>
            <sequence name="constants">
                <assign name="keyName_init">
                    <copy>
                        <from>'weatherbug'</from>
                        <to variable="keyName"/>
                    </copy>
                </assign>
                <assign name="unit_init">
                    <copy>
                        <from>'Metric'</from>
                        <to variable="unit"/>
                    </copy>
                </assign>
            </sequence>
        </sequence>
        <sequence name="a2">
            <assign name="a2_pre">
                <copy>
                    <from variable="keyName"/>
                    <to>$GetIn.parameters/partner</to>
                </copy>
            </assign>
            <invoke name="a2_tech" partnerLink="partnerKeys" operation="get" xmlns:tns="http://partners.registry.technical.jSeduite.modalis.i3s.unice.fr/" portType="tns:PartnerKeys" inputVariable="GetIn" outputVariable="GetOut"/>
            <assign name="a2_post">
                <copy>
                    <from>$GetOut.parameters/return</from>
                    <to variable="key"/>
                </copy>
            </assign>
        </sequence>
        <flow name="flow_0">
            <sequence name="subseq_0_0">
                <sequence name="a3">
                    <assign name="a3_pre">
                        <copy>
                            <from variable="cityCode"/>
                            <to>$GetLiveWeatherByCityCodeIn.parameters/ns1:cityCode</to>
                        </copy>
                        <copy>
                            <from variable="unit"/>
                            <to>$GetLiveWeatherByCityCodeIn.parameters/ns1:unittype</to>
                        </copy>
                        <copy>
                            <from variable="key"/>
                            <to>$GetLiveWeatherByCityCodeIn.parameters/ns1:ACode</to>
                        </copy>
                    </assign>
                    <invoke name="a3_tech" partnerLink="weatherBugService" operation="GetLiveWeatherByCityCode" xmlns:tns="http://api.wxbug.net/" portType="tns:WeatherBugWebServicesSoap" inputVariable="GetLiveWeatherByCityCodeIn" outputVariable="GetLiveWeatherByCityCodeOut"/>
                    <assign name="a3_post">
                        <copy>
                            <from>$GetLiveWeatherByCityCodeOut.parameters/ns1:GetLiveWeatherByCityCodeResult</from>
                            <to variable="liveInfo"/>
                        </copy>
                    </assign>
                </sequence>
                <assign name="a4">
                    <copy>
                        <from>number($liveInfo/ns1:Pressure)</from>
                        <to>$simpl_liveInfo/ns0:pressure</to>
                    </copy>
                    <copy>
                        <from>$liveInfo/ns1:StationName</from>
                        <to>$simpl_liveInfo/ns0:station</to>
                    </copy>
                    <copy>
                        <from>number($liveInfo/ns1:RainToday)</from>
                        <to>$simpl_liveInfo/ns0:rain</to>
                    </copy>
                    <copy>
                        <from>number($liveInfo/ns1:WindSpeed)</from>
                        <to>$simpl_liveInfo/ns0:windSpeed</to>
                    </copy>
                    <copy>
                        <from>$liveInfo/ns1:CurrIcon</from>
                        <to>$simpl_liveInfo/ns0:icon</to>
                    </copy>
                    <copy>
                        <from>$liveInfo/ns1:WindDirection</from>
                        <to>$simpl_liveInfo/ns0:windDirection</to>
                    </copy>
                    <copy>
                        <from>number($liveInfo/ns1:TemperatureLow)</from>
                        <to>$simpl_liveInfo/ns0:minTemp</to>
                    </copy>
                    <copy>
                        <from>number($liveInfo/ns1:TemperatureHigh)</from>
                        <to>$simpl_liveInfo/ns0:maxTemp</to>
                    </copy>
                    <copy>
                        <from>number($liveInfo/ns1:Temperature)</from>
                        <to>$simpl_liveInfo/ns0:temp</to>
                    </copy>
                </assign>
            </sequence>
            <sequence>
                <sequence name="a5">
                    <assign name="a5_pre">
                        <copy>
                            <from variable="cityCode"/>
                            <to>$GetForecastByCityCodeIn.parameters/ns1:cityCode</to>
                        </copy>
                        <copy>
                            <from variable="unit"/>
                            <to>$GetForecastByCityCodeIn.parameters/ns1:unitType</to>
                        </copy>
                        <copy>
                            <from variable="key"/>
                            <to>$GetForecastByCityCodeIn.parameters/ns1:ACode</to>
                        </copy>
                    </assign>
                    <invoke name="a5_tech" partnerLink="weatherBugService" operation="GetForecastByCityCode" xmlns:tns="http://api.wxbug.net/" portType="tns:WeatherBugWebServicesSoap" inputVariable="GetForecastByCityCodeIn" outputVariable="GetForecastByCityCodeOut"/>
                    <assign name="a5_post">
                        <copy>
                            <from>$GetForecastByCityCodeOut.parameters/ns1:GetForecastByCityCodeResult</from>
                            <to variable="forecastInfo_star"/>
                        </copy>
                    </assign>
                </sequence>
                <scope name="set_0">
                    <variables>
                        <variable name="simpl_forecastInfo" type="ns0:ForecastWeather"/>
                        <variable name="forecastInfo" type="ns1:ApiForecastData"/>
                        <variable name="current" type="xsd:integer"/>
                    </variables>
                    <sequence name="set_0_body">
                        <assign name="set_0_init">
                            <copy>
                                <from>1</from>
                                <to variable="current"/>
                            </copy>
                        </assign>
                        <while name="set_0_loop">
                            <condition>$current &lt;= count($forecastInfo_star/ns1:ApiForecastData)</condition>
                            <sequence name="set_0_loop_body">
                                <assign name="set_0_feed">
                                    <copy>
                                        <from>$forecastInfo_star/ns1:ApiForecastData[$current]</from>
                                        <to variable="forecastInfo"/>
                                    </copy>
                                </assign>
                                <assign name="a6">
                                    <copy>
                                        <from>number($forecastInfo/ns1:TempHigh)</from>
                                        <to>$simpl_forecastInfo/ns0:maxTemp</to>
                                    </copy>
                                    <copy>
                                        <from>number($forecastInfo/ns1:TempLow)</from>
                                        <to>$simpl_forecastInfo/ns0:minTemp</to>
                                    </copy>
                                    <copy>
                                        <from>$forecastInfo/ns1:ShortTitle</from>
                                        <to>$simpl_forecastInfo/@day</to>
                                    </copy>
                                </assign>
                                <assign name="set_0_swell">
                                    <copy>
                                        <from variable="simpl_forecastInfo"/>
                                        <to>$simpl_forecastInfo_star/ns0:item[$current]</to>
                                    </copy>
                                </assign>
                                <assign name="set_0_increment">
                                    <copy>
                                        <from>$current + 1</from>
                                        <to variable="current"/>
                                    </copy>
                                </assign>
                            </sequence>
                        </while>
                    </sequence>
                </scope>
            </sequence>
        </flow>
        <assign name="a7">
            <copy>
                <from variable="simpl_liveInfo"/>
                <to>$result/ns0:live</to>
            </copy>
            <copy>
                <from variable="simpl_forecastInfo_star"/>
                <to>$result/ns0:forecast_star</to>
            </copy>
        </assign>
        <sequence name="a8">
            <assign name="a8_pre">
                <copy>
                    <from variable="result"/>
                    <to>$GetWeatherOut.out/ns0:return</to>
                </copy>
            </assign>
            <reply name="a8_tech" partnerLink="external" operation="GetWeather" xmlns:tns="http://modalis.i3s.unice.fr/jSeduite/orchestrations/wsdl/WeatherProxy" portType="tns:WeatherProxyPortType" variable="GetWeatherOut"/>
        </sequence>
    </sequence>
</process>
